services:
  postgres:
    image: postgres:15-alpine
    container_name: checklist-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - checklist-network
    restart: unless-stopped

  redis-shard-0:
    image: redis:7-alpine
    container_name: checklist-redis-shard-0
    env_file:
      - .env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_shard_0_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - checklist-network
    restart: unless-stopped
    profiles:
      - redis

  redis-shard-1:
    image: redis:7-alpine
    container_name: checklist-redis-shard-1
    env_file:
      - .env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - redis_shard_1_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - checklist-network
    restart: unless-stopped
    profiles:
      - redis

  checklist-db-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: checklist-db-service
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      IN_DOCKER: "true"
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
      - "${GRPC_PORT}:${GRPC_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      redis-shard-0:
        condition: service_healthy
      redis-shard-1:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - checklist-network
    restart: unless-stopped
    profiles:
      - redis

volumes:
  postgres_data:
    driver: local
  redis_shard_0_data:
    driver: local
  redis_shard_1_data:
    driver: local

networks:
  checklist-network:
    external: true